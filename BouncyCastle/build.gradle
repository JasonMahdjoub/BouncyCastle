buildscript {
   repositories {
       maven {
         url "https://plugins.gradle.org/m2/"
       }
   }

   /*dependencies {
        classpath "net.saliman:gradle-cobertura-plugin:3.0.0"
   }*/
}

if (JavaVersion.current().isJava8Compatible()) {
    allprojects {
        tasks.withType(Javadoc) {
            options.addStringOption('Xdoclint:none', '-quiet')
        }
    }
}

def Properties props = new Properties()
def propFile = file('gradle.properties')
def artifactory_Url="https://artifactory.distri-mind.fr/artifactory"
def user=""
def pwd=""
if (propFile.canRead())
{
    props.load(new FileInputStream(propFile))

    
	if (props!=null && props.containsKey('artifactory_contextUrl'))
		artifactory_Url="${artifactory_contextUrl}"	
	if (props!=null && props.containsKey('artifactory_user'))
		user="${artifactory_user}"	
	if (props!=null && props.containsKey('artifactory_password'))
		pwd="${artifactory_password}"	
}
apply plugin: 'java-library'
def JavaVersionSource=8
def JavaVersionTarget=8
sourceCompatibility = JavaVersionSource
targetCompatibility= JavaVersionTarget



allprojects {
   apply plugin: 'java'
   apply plugin: 'idea'
   apply plugin: 'maven-publish'
   group='org.bouncycastle'

	compileJava.options.compilerArgs.addAll(['--release', JavaVersionTarget])
	if (project.hasProperty('javaHomeVersion') && JavaVersionTarget.toFloat()>1.8)
		javadoc.options.addStringOption("html5", "-quiet")


	repositories {


	   	maven {
	       		url "${artifactory_Url}/gradle-release"
	       		if (user!="")
	       		{
		       		credentials {
		              username "${artifactory_user}"
		              password "${artifactory_password}"
		            }
		         }
	   	} 
	}

   dependencies {
        testCompile group: 'junit', name: 'junit', version: '4.11'
   }
	tasks.withType(JavaExec) {
		jvmArgs = ['-Xms4g', '-Xmx4g']
	}

}

idea {
    project {
        jdkName = JavaVersionTarget
        languageLevel = JavaVersionSource
    }
}

ext {
    bcTestDataHome = file('core/src/test/data').absolutePath
}

task printProperties {
	doLast {
		println bcTestDataHome
	}
}

subprojects {
	if (propFile.canRead())
	{
	    props.load(new FileInputStream(propFile))
	}

    apply plugin: 'idea'
	ext.vmrange='jdk15to18'
    sourceCompatibility = JavaVersionSource
    targetCompatibility = JavaVersionTarget

    version = '1.66-DMRECOMPILE'

	compileJava.options.compilerArgs.addAll(['--release', JavaVersionTarget] as Collection<? extends String>)
	if (project.hasProperty('javaHomeVersion') && JavaVersionTarget.toFloat()>1.8)
		javadoc.options.addStringOption("html5", "-quiet")


    test {
        systemProperty 'bc.test.data.home', bcTestDataHome

        filter {
            includeTestsMatching "*AllTests"
        }
    }
    task sourcesJar(type: Jar, dependsOn: classes) {
	    classifier = 'sources'
	    from sourceSets.main.allSource
	    from "../../BCLICENSE"
	}

	/*task javadocJar(type: Jar, dependsOn: javadoc) {
	    classifier = 'javadoc'
	    from javadoc.destinationDir
	    from "../../BCLICENSE"
	}*/
	publishing {
		publications {
		      maven(MavenPublication) {
		        groupId 'org.bouncycastle'
            	artifactId 'bc-'+project.name

		        pom.withXml {
		          asNode().appendNode("name", project.name)
		          asNode().appendNode("description", project.description)
		        }
				from components.java
            	artifact sourcesJar
            	//artifact javadocJar		        
	      	  }
	    }
		repositories {
	        maven {
	            credentials {
	              username "${user}"
	              password "${pwd}"
	            }
	            url "${artifactory_Url}/DistriMind-Public"
	     	}
    	}
    }	      

}

test.dependsOn([':core:test', ':prov:test', ':pkix:test', ':mail:test', 'pg:test'])
